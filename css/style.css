/* Comentario en CSS 
   Regla css consta de 2 partes
   1) el selector
   2)bloque de declaraciones:{
    atributo:valor;
    atributo-de-mas-de-dos-palabras:valor;
   }
*/
/*import Son mala practica porque son bloqueante a la hora
 de que el navegador lee esta instrucci√≥n*/
@import url("otro-style.css");

html{
    scroll-behavior: smooth;
}

h1{
    color:rgb(112, 18, 175);
    background-color:skyblue;
}
/*Selectores B√°sicos
    1)Etiquetas - son elementos html
    2)Identificadores - atributo id - #
    3)Clases - atributo class - .
*/

p{
    color: midnightblue;
}

#parrafo-dos{
    background-color: skyblue;
}
/*Dar estilos con clases nos permite reutilizar nuesto c√≥digo CSS */

.bg-steelblue{
    background-color: skyblue;
}
.text-20{
    font-size: 20px;
}
.text-32{
    font-size: 32px;
}
.text-white{
    color: white;
}
.hijos-directos > li{
    background-color: thistle;
}
.hijos-descendientes b{
    background-color: thistle;
}

/* los selectores de hermanos solo van aplicar a los elementos hermano , pero que esten por debajo*/
.hermanos-general ~ li{
    background-color: thistle;
}
.hermanos-adyacentes + li{
    background-color:thistle;
}
/* Selectores de atributos */
.selectores-atributos a[href]{              /* la etiqueta "a" que en atributo tenga "href" */
    color: orangered;
}
.selectores-atributos a[target=_blank]{     /* la etiqueta "a" que en atributo "target" y su valor sea "_target" */
    font-weight: bold;
}
.selectores-atributos a[href*="jon"]{       /* El selector *= significa "contiene"  */
    font-size: 20px;
}
.selectores-atributos a[href^="http://"]{   /* El selector ^= significa "comienza con" */
    text-decoration: none;
}
.selectores-atributos a[href$=".com"]{      /* El selector $= significa "termine con" */
    background-color: black;
}
.selectores-atributos a[class~="cursos"]{  /* El selector ~= significa "contiene la palabra completa como un valor de clase".*/
    background-color: rgb(45, 45, 218);
}
.selectores-atributos a[class|="menu"]{  /*  [class|="menu"]: Selecciona cualquier elemento <a> cuya lista de clases comience con "menu" o tenga "menu" como un valor de clase completo, seguido por un guion ("-") o el final de la cadena. El selector |= significa "comienza con" en el contexto de los valores de atributo.  */
   background-color: chartreuse;
}
/* Selector Universal */
    
*{
   
}

.selector-universal *{
    font-size: 20px;
}

/* Pseudoclases *//*posicion, estado, atributo*/
/*Una pseudoclase en CSS es una palabra clave que se a√±ade a los selectores para especificar un estado o relaci√≥n especial del elemento seleccionado. Las pseudoclases permiten aplicar estilos de manera din√°mica en funci√≥n de ciertos criterios, como el estado del enlace (:hover, :active), la posici√≥n de un elemento (:first-child, :last-child), la presencia de ciertos atributos (:required, :checked) y m√°s.*/

.form-pseudoclases *:required{  /* Aplica un borde azul a cualquier elemento que tenga required dentro de un contenedor con la clase 'form-pseudoclases'. */
    border-color: blue;
    border-width: 3px;
    ;
}

.form-pseudoclases *:valid{
    border-color: green; 
}

.form-pseudoclases *:focus{
    background-color: skyblue;
}

.form-pseudoclases *:disabled{
    background-color: pink;
}
.menu-pseudoclases a:visited{
    color:green;
}
.menu-pseudoclases a:hover{
    color: orangered;
}


.p-pseudoclases:hover{
    font-size: 20px;
}

#temario-css:target{        /* se utiliza para aplicar estilos a un elemento con el ID "temario-css" cuando se convierte en el objetivo (:target). En HTML, el pseudoclase :target se refiere al elemento que est√° siendo apuntado por el fragmento de URL (el identificador despu√©s del s√≠mbolo #) */
    background-color: lightgreen;
}

.lista-pseudoclases li:first-child{
    color: green;
}
.lista-pseudoclases li:last-child{
    color: violet;
}
.lista-pseudoclases li:nth-child(3){
    color: rgb(74, 7, 230);
}
.lista-pseudoclases li:nth-child(4n){
    font-size: 20px;
}
.lista-pseudoclases li:nth-child(3n+1){
    font-weight: bold;
}
.lista-pseudoclases li:nth-child(even){
    background-color: yellow;
}
.lista-pseudoclases li:nth-child(odd){
    background-color: orange;
}

.articulo-pseudoclases p:first-of-type{
    background-color: pink;
}

.articulo-pseudoclases p:last-of-type{
    background-color: pink;
}

.articulo-pseudoclases p:nth-of-type(3){
    background-color: fuchsia;
}
.articulo-pseudoclases *:not(p){   /*se aplica a todos menos a los que no son parrafos*/
    background-color: beige;
}

/*Pseudoelementos - Dan estilo a partes especificas de un elemento, se usa el :: para diferenciarlos de la pseudoclases*/
.saga-geminis::before{
    content: "ü§º‚Äç‚ôÇÔ∏è";
}
.saga-geminis::after{
    content: "‚ôä";
}
.saga-precio::before{
    content: "üí≤";
    font-weight: bold;
}
.saga-precio::after{
    content: "USD";
    font-weight: bold;
}

.p-pseudoelementos::first-letter{
    font-weight: bold;
    font-size: 30px;
}
.p-pseudoelementos::first-line{
    color: blueviolet;
}
.p-pseudoelementos::selection{
    color: greenyellow;
    background-color: black;
}
.input-pseudoelementos::placeholder{
    color: green;
}

/*Agrupar selectores*/
.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores textarea{
    border-color:yellow ;
    border-width: 2px;
    border-style: dashed;
    background-color: black;
    font-size: 17px;
    display: block;
    width: 300px;
}

/*El Algoritmo de CSS:Es la forma en que el navegador aplica los estilos al documento HTML.
 Es vital entender este concepto para que entiendas como se aplican y en algunas 
 ocasiones se sobreescriben las reglas CSS
 1)La C√°scada.
 2)La Especificidad
 3)La Herencia

 La C√°scada es el mecanismo en que el navegador aplica los estilos. Y toma en cuenta lo siguiente en este orden:
 1) El Origen del C√≥digo:
    -El User Agent(los estilos por defecto del navegador)
    -Personalizaciones del usuario
    -Los estilos del autor
 2)La especificidad del Selector 
    
 3)Orden de Aparici√≥n

 La Especificidad es el peso que tiene un selector cuando hay conflicto de estilos. Se calcula de la siguiente forma:
    -Etiquetas y pseudoelemento ------------ 0,0,0,1
    -Clases, atributos y pseudoclases ------ 0,0,1,0
    -Identificadores ----------------------- 0,1,0,0
    -Estilos en l√≠nea ---------------------- 1,0,0,0
    -!important ---------------------------- Rompe la especificidad
 
 La Herencia, es la capacidad de un selector de obtener(heredar)los valores de sus 
 ancestros m√°s cercanos, para aplicarla se usa el valor inherit, si queremos evitarla 
 podemos asignar otro valor o inicializar la propiedad en cuesti√≥n con el valor initial
 */


 blockquote#cita-marco.cita-marco{
    background-color: chocolate;
 }

 blockquote{
    background-color: burlywood;
 }

 #cita-marco{
    background-color: greenyellow;
 }

 blockquote.cita-marco{  /*se aplica a la etiqueta que tenga clase cite-marco*/
    background-color: tomato;
 }
 
 .cita-marco{
    background-color: cornflowerblue;
 }

 .cita-marco{
    background-color: aqua !important;
 }

 blockquote#cita-marco{
    background-color: lightsalmon;
 }

 .cita-marco{
    background-color: moccasin !important;
    font-size: 20px;
    border-style: dotted;
    border-color: red;
}

/* herencia */
.cita-marco cite{
    background-color: pink;
    background-color: inherit;
    font-size: 20px;
    font-size: initial;
    border-style: inherit;
    border-color: inherit;
 }