/*

Modelo de caja: Es la forma en que CSS vee a los elementos HTML y ¿Cómo los ve? como si
fueran cajas con las siguientes propiedades:
1)Contenido(content)
2)El borde(border)
3)El relleno(padding):Son las distancias internas
4)El márgen(margin): Son las distancias externas

Dentro del modelo de caja hay que considerar que una caja tendrá 4 lados::after
1.Arriba(top)
2.Derecha(rigth)
3.Abajo(bottom)
4.Izquierda(left)

*/

h1{
    width: 400px;
    height: 200px;
    /* propiedades de shorthand */
    border-color: green;
    border-style: solid;
    border-width: medium;
    border-top-color: red; 
    border:2px dashed rgb(38, 0, 255);
}
.caja-uno,
.caja-dos{
    background-color: chocolate;
    border: medium solid orange;
  
/*
Esto aplica para margin y padding
1 valor = aplicar a los 4 lados
2 valor = primer valor es para los lados verticales
          segundo valor es para los lados horizontales
3 valor = primer valor es para TOP
          segundo valor es para los lados horizontales            
          tercer valor es para BOTTOM
4 valor = primer valor es para TOP
          segundo valor es para RIGHT            
          tercer valor es para BOTTOM
          cuarto valor es para LEFT
*/
    padding: 20px;
    margin: 20px;
    padding: 20px 40px;
    margin: 40px 20px;
    padding: 0 40px 20px;
    margin: 50px 30px 0;
    padding: 0 40px 20px 50px;
    margin: 100px 50px 30px 0 ;

}
/*
Caja en Linea
    -Ocupan el espacio necesario para mostrar su contenido.
    -No tienen dimensiones modificables(alto, ancho)
    -Permiten otros elementos a su lado.
    -Padding y margin solo empujan a elementos adyacentes en horizontal, NUNCA EN VERTICAL
    -En padding si toma los 4 valores, pero en margin solo toma los valores horizontales
Caja de Bloque
    -Ocupan todo el ancho disponible
    -Tienen dimensiones modificables(alto,ancho)
    -No permiten otros elementos a su lado (aunque especifique un ancho, siguen ocupando todo el espacio discponible a lo ancho)
*/
.caja-linea,
.caja-bloque{
    background-color: darkcyan;
    color: white;
    width: 500px;
    height: 100px;
    border:medium solid black;
    padding: 16px;
}
.caja-bloque{
    margin: 32px;
    display: block;
    
}
.caja-linea{
    margin: 32px;
    display: inline;
 
}

/*Propiedad Display
    inline
    block
    inline-block- Se comporta como un elemento de linea pero acepta modificar sus dimensiones(alto y ancho)
    none - no se vee y pierde su espacio table en el documento html
    
    list-item
    flex - ve curso de Flexbox CSS
    grid - ve curso de Grid CSS
*/
.caja-none,.caja-linea-bloque,.caja-hidden{
    background-color: darkorange;
    color: white;
    width: 600px;
    height: 300px;
    border: medium solid black;
}
.caja-linea-bloque{
    display: inline-block;
}
.caja-none{
    display: none;
}
.caja-hidden{
    visibility: hidden;  /*oculta el elemento , pero conserva el espacio, a diferenecia del displaly:none*/
}
.overflow{
    background-color: darkturquoise;
    width: 200px;
    height: 100px;
    /*overflow-y:scroll*/
    /*overflow-x:scroll*/
    overflow: visible;
    overflow: hidden;  
    overflow: scroll;
    overflow: auto;
}
/*Tamaño de Caja(Box Sizing)*/
.box-sizing-content,.box-sizing-border{
    background-color: deepskyblue;
    box-sizing: content-box;
    width: 500px;
    height: 250px;
    padding: 10px;
    border:5px solid black
}
.box-sizing-border{
    box-sizing: border-box;
}

.container-col-3{
    background-color: burlywood;
    width: 600px;
    height: 100px;
    margin-top: 20px;
}
/*cuando aplicas "float: left;" a un elemento, se desplazará hacia la izquierda tanto como sea 
posible dentro de su elemento contenedor, y los elementos siguientes fluirán alrededor de él 
en el lado derecho.*/
.container-col-3 > *{
    width: 200px;
    box-sizing: border-box;
    border: thin solid rebeccapurple;
    padding: 5px;
    float: left;
}
/* apply a natural box layout model to all elements, but allowing components to change *//*reseteando el html*/
html {
    box-sizing: border-box;
  }
  *, 
  *:before, 
  *:after {
    box-sizing: inherit;
  }


/* Floats - antes se usaba esto para la maquetacion, pero ahora se usa flexbox y grid */
.container-floats{ 
    background-color: cornflowerblue;
}
.float-left{
   
    float: left;
}
.float-right{

    float: right;
}
.clearfix{              
    clear: both;        /*  se utiliza para limpiar el flujo flotante y asegurarse de que los elementos siguientes no se vean afectados por el elemento flotante */
}
/* Colapso de Margenes Verticales *//*cuando damos margin verticales a dos elementos, estos no se suman, sino que uno esta sobre otro*/
.margin-collapse{
    background-color: skyblue;
}

.margin-collapse section{
    border: thin solid black ;
    margin-top: 16px;
    margin-bottom: 16px;
}

.margin-collapse span{
    border: thin solid black ;
    display: inline-block;
    margin-right: 16px;
    margin-left: 16px;

}
/*Centrado de Cajas*/
.sitio-web{
    border: thin solid black;
    background-color: thistle;
    width: 800px;
    height: 500px;
    padding: 16px;
    margin-left: auto;
    margin-right: auto;
}

